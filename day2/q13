/*Definition of doubly linked list:
class ListNode {
    int val;
    ListNode next;
    ListNode prev;

    ListNode() {
        val = 0;
        next = null;
        prev = null;
    }

    ListNode(int data1) {
        val = data1;
        next = null;
        prev = null;
    }

    ListNode(int data1, ListNode next1, ListNode prev1) {
        val = data1;
        next = next1;
        prev = prev1;
    }
}
 */

class Solution {
    public ListNode deleteAllOccurrences(ListNode head, int target) {
        ListNode newhead=new ListNode(0);
        ListNode temp=newhead;
        ListNode cur=head;
      

        while(cur!=null)
        {
          if(cur.val!=target)
          {
            temp.next=cur;
            cur.prev=temp;
           
            temp=temp.next;
          }  
          cur=cur.next;
        }
           temp.next = null;
           if (newhead.next != null) {
            newhead.next.prev = null; 
        }
        return newhead.next;
    }
}
